---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import Article from "@/components/Article.astro";
import Budoux from "@/components/Budoux.astro";
import Pager from "@/components/Pager.astro";
import Tags from "@/components/Tags.astro";
import Layout from "@/layouts/Layout.astro";

interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map((post) => {
    const slug = post.slug;
    return {
      params: {
        slug,
      },
      props: {
        post,
      },
    };
  });
}

const { post } = Astro.props;

const site = Astro.url.origin;

const dateString = new Intl.DateTimeFormat("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
}).format(post.data.date);

const lastmodString = new Intl.DateTimeFormat("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
}).format(post.data.lastmod);
---

<Layout
  title={post.data.title}
  description={post.data.description}
  path={`${post.collection}/posts/${post.slug}`}
  pagefind={true}
  og={{
    enabled: true,
    width: 1200,
    height: 630,
    image: new URL(`/api/og/article/${post.collection}/${post.slug}.png`, site),
    type: "article",
  }}
>
  <main class="post-main">
    <header>
      <div class="emoji-container">
        <span class="emoji">{post.data.emoji}</span>
      </div>
      <Budoux><h1>{post.data.title}</h1></Budoux>
      <Budoux><p>{post.data.description}</p></Budoux>
      <div
        class="tags-container"
        data-pagefind-ignore
        data-pagefind-meta={`tags:${post.data.tags?.join(", ")}`}
      >
        <Tags tags={post.data.tags} collectionKey={post.collection} />
      </div>
      <div class="post-info" data-pagefind-ignore>
        <div>
          <div class="published-container">Published</div>
          <div>
            <time
              datetime={post.data.date.toISOString()}
              data-pagefind-meta={`published:${dateString}`}
              data-pagefind-filter="published"
            >
              {dateString}
            </time>
          </div>
        </div>
        {
          post.data.lastmod && (
            <div>
              <div class="lastmod-container">Last Modified</div>
              <div>
                <time
                  datetime={post.data.lastmod.toISOString()}
                  data-pagefind-meta={`updated:${lastmodString}`}
                  data-pagefind-filter="updated"
                >
                  {lastmodString}
                </time>
              </div>
            </div>
          )
        }
      </div>
    </header>
    <Article post={post} />
    <Pager topPath={`/${post.collection}`} />
  </main>
</Layout>

<style>
  main {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    padding: 2rem 0;
    gap: 1.5rem;
  }

  header {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .emoji-container {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .emoji {
    font-size: 3.75rem;
    line-height: 1;
  }

  h1, p {
    text-align: center;
  }

  p {
    color: var(--fg75);
  }

  .tags-container {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .post-info {
    display: flex;
    gap: 2rem;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  .published-container {
    color: var(--fg75);
  }

  .lastmod-container {
    color: var(--fg75);
  }
</style>

---
import { getEntry, getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import Article from "@/components/Article.astro";
import Budoux from "@/components/Budoux.astro";
import Pager from "@/components/Pager.astro";
import Tags from "@/components/Tags.astro";
import Layout from "@/layouts/Layout.astro";

interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map((post) => {
    return {
      params: {
        id: post.id,
      },
      props: {
        post,
      },
    };
  });
}

const meta = await getEntry("data", "data");

const { post } = Astro.props;

const dateString = new Intl.DateTimeFormat("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
}).format(post.data.date);

const lastmodString = new Intl.DateTimeFormat("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
}).format(post.data.lastmod);
---

<Layout
  title=`${post.data.title} | ${meta!.data.top.title}`
  description={post.data.description}
  pagefind={true}
  og={{
    enabled: true,
    width: 1200,
    height: 630,
    image: new URL(
      `/api/og/article/${post.collection}/${post.id}.png`,
      Astro.url,
    ),
    type: "article",
  }}
>
  <header>
    <span class="emoji">{post.data.emoji}</span>
    <Budoux><h1>{post.data.title}</h1></Budoux>
    <Budoux><p>{post.data.description}</p></Budoux>
    <Tags
      tags={post.data.tags}
      collectionKey={post.collection}
      class="tags-container"
      data-pagefind-ignore
      data-pagefind-meta={`tags:${post.data.tags?.join(", ")}`}
    />
    <div class="post-info" data-pagefind-ignore>
      <div>
        <div class="date-container">Published</div>
        <div>
          <time
            datetime={post.data.date.toISOString()}
            data-pagefind-meta={`published:${dateString}`}
            data-pagefind-filter="published"
          >
            {dateString}
          </time>
        </div>
      </div>
      {
        post.data.lastmod && (
          <div>
            <div class="date-container">Last Modified</div>
            <div>
              <time
                datetime={post.data.lastmod.toISOString()}
                data-pagefind-meta={`updated:${lastmodString}`}
                data-pagefind-filter="updated"
              >
                {lastmodString}
              </time>
            </div>
          </div>
        )
      }
    </div>
  </header>
  <Article post={post} />
  <Pager backTo={`/${post.collection}`} />
</Layout>

<style>
  header {
    display: grid;
    gap: 1.5rem;
    justify-items: center;
    text-align: center;
  }

  .emoji {
    font-size: 3rem;
  }

  .post-info {
    display: grid;
    grid-auto-flow: column;
    gap: 1rem;
  }

  p,
  .date-container {
    color: var(--fg75);
  }
</style>
